[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Julia Workshop for Data Science",
    "section": "",
    "text": "Julia has been called the programming language of the 21st century for scientific computing, data science, and machine learning. As a high-level, high-performance, dynamic language, Julia is faster than other scripting languages because of smart design decisions like type-stability through specialization via multiple-dispatch. Julia’s code can be efficient and concise, which leads to clear performance gains. In addition, Julia’s environments are fully reproducible and it is easy to express object-oriented and functional programming patterns.\nThis tutorial will provide an introduction to key Data Science tools in Julia such as data management with Arrow.jl and Tables.jl and (Generalized) linear mixed models with GLMM.jl and MixedModels.jl. Unlike widely used R packages, all packages that we will describe are written 100% in Julia thus illustrating the language’s potential to overcome the two-language problem.\nThis tutorial will appeal to anyone interested in learning more about Julia and some of the existing Julia packages that are already available for Statistics and Data Science. In addition to lectures, participants will engage in hands-on exercises. For example, participants will bring a dataset of their choice along with an existing script written in another language (R or python) that performs certain data analyses. During the tutorial, participants will translate their work to Julia in-order to compare running times and ease of programming."
  },
  {
    "objectID": "index.html#learning-objectives-for-tutorial",
    "href": "index.html#learning-objectives-for-tutorial",
    "title": "Julia Workshop for Data Science",
    "section": "Learning Objectives for Tutorial",
    "text": "Learning Objectives for Tutorial\nAt the end of the tutorial, participants will be able to:\n\nIdentify the main features that make Julia an attractive language for Data Science\nSet up a Julia environment to run their data analysis\nEfficiently handle datasets (even across different languages) through Tables.jl and Arrow.jl\nFit (generalized) linear mixed models with MixedModels.jl\nCommunicate across languages (Julia, R, python)\n\nIntended audience and level: The tutorial is intended for any data scientist with experience in R and/or python who is interested in learning the attractive features of Julia for Data Science. No knowledge of Julia is required."
  },
  {
    "objectID": "index.html#notebooks-for-the-course",
    "href": "index.html#notebooks-for-the-course",
    "title": "Julia Workshop for Data Science",
    "section": "Notebooks for the course",
    "text": "Notebooks for the course\n\nSession 0: Housekeeping\nSession 1: Get Started\nSession 2a: Data Tables and Arrow files\nSession 2b: Interval Overlap\nSession 4: Hands-on exercise\nSession 6: Conclusions"
  },
  {
    "objectID": "session0-housekeeping.html",
    "href": "session0-housekeeping.html",
    "title": "Julia Workshop for Data Science",
    "section": "",
    "text": "Schedule\n\n\n\nTime\nTopic\nNotes\nPresenter\n\n\n\n\n11:00 - 11:45\nSession 1: Getting started with Julia\nNotes\nClaudia Solis-Lemus\n\n\n11:45 - 12:45\nSession 2: Data tools\n\nDoug Bates\n\n\n12:45 - 1:00\nQ&A\n\n\n\n\n1:00 - 2:00\nLunch break\n\n\n\n\n2:00 - 3:00\nSession 3: Model fitting\n\nDoug Bates\n\n\n3:00 - 3:15\nSession 4: Description of hands-on exercise\nNotes\n\n\n\n3:15 - 3:30\nCoffee break\n\n\n\n\n3:30 - 4:30\nHands-on exercise\n\nSam Ozminkowski and Bella Wu\n\n\n4:30 - 4:45\nPresentation of selected participants’ scripts\n\n\n\n\n4:45 - 5:00\nCoffee break\n\n\n\n\n5:00 - 5:30\nSession 5: Other important Data Science tools\nNotes\nClaudia Solis-Lemus\n\n\n5:30 - 6:00\nSession 6: Conclusions and questions\nNotes\nClaudia Solis-Lemus\n\n\n\n\n\nIn preparation for the workshop\nParticipants are required to follow the next steps before the day of the workshop:\n\nGit clone the workshop repository: git clone https://github.com/crsl4/julia-workshop.git\nInstall Julia. The recommended option is to use JuliaUp:\n\n\nWindows: winget install julia -s msstore\nMac and Linux: curl -fsSL https://install.julialang.org | sh\nHomebrew users: brew install juliaup\n\nAfter JuliaUp is installed, you can install different Julia versions with:\njuliaup add release  ## installs release version\njuliaup add beta     ## installs beta version\njuliaup st           ## status of julia versions installed\njuliaup default beta ## making beta version the default\n\nChoose a dataset along with a script to analyze it written in another language (R or python) as we will spend part of the workshop translating participants’ scripts to Julia."
  }
]